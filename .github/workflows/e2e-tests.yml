name: E2E Tests with LambdaTest HyperExecute

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggers

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install HyperExecute CLI
        run: |
          wget https://downloads.lambdatest.com/hyperexecute/linux/hyperexecute
          chmod +x hyperexecute
          sudo mv hyperexecute /usr/local/bin/
          
      - name: Verify HyperExecute installation
        run: hyperexecute --version
        
      - name: Run E2E Tests on LambdaTest HyperExecute
        env:
          LT_USERNAME: ${{ secrets.LT_USERNAME }}
          LT_ACCESS_KEY: ${{ secrets.LT_ACCESS_KEY }}
        run: |
          echo "Starting E2E tests on LambdaTest HyperExecute..."
          hyperexecute --config hyperexecute.yaml --verbose
          
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: hyperexecute-results
          path: |
            e2e-results/
            e2e/artifacts/
          retention-days: 7
          
      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## üß™ E2E Test Results\n\n';
            
            try {
              // Try to read test results
              const resultsFile = 'e2e-results/results.json';
              if (fs.existsSync(resultsFile)) {
                const results = JSON.parse(fs.readFileSync(resultsFile, 'utf8'));
                comment += `- **Total Tests:** ${results.numTotalTests}\n`;
                comment += `- **Passed:** ${results.numPassedTests} ‚úÖ\n`;
                comment += `- **Failed:** ${results.numFailedTests} ‚ùå\n`;
                comment += `- **Duration:** ${results.duration}ms\n\n`;
              } else {
                comment += 'Test results not found. Check the workflow logs for details.\n\n';
              }
            } catch (error) {
              comment += `Error reading test results: ${error.message}\n\n`;
            }
            
            comment += 'Tests ran on LambdaTest HyperExecute on Android device:\n';
            comment += '- Pixel8 Android Emulator\n\n';
            comment += 'ü§ñ Generated by [Claude Code](https://claude.ai/code)';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit and integration tests
        run: npm test
        
      - name: Run linter
        run: npm run lint