# GitLab CI Pipeline for React Native Detox E2E Testing
# Optimized for Android emulator testing with comprehensive artifact collection

stages:
  - build
  - test
  - deploy

variables:
  # Android SDK Configuration
  ANDROID_SDK_ROOT: "/android-sdk"
  ANDROID_HOME: "/android-sdk"
  ANDROID_AVD_HOME: "/android-sdk/avd"
  
  # React Native Configuration
  NODE_VERSION: "18"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
  
  # Detox Configuration
  DETOX_CONFIGURATION: "android.emu.debug"
  
  # Performance Optimizations
  CI: "true"
  FORCE_COLOR: "1"

# Cache configuration for faster builds
cache:
  key: 
    files:
      - package-lock.json
      - android/gradle/wrapper/gradle-wrapper.properties
  paths:
    - node_modules/
    - android/.gradle/
    - ~/.gradle/caches/
    - ~/.android/

# ================================
# BUILD STAGE
# ================================

üì± Build APKs:
  stage: build
  image: reactnativecommunity/react-native-android:14.0
  before_script:
    - echo "üöÄ Starting APK build process..."
    - node --version
    - npm --version
    - java -version
    - echo "Android SDK Root: $ANDROID_SDK_ROOT"
    
  script:
    # Install dependencies
    - echo "üì¶ Installing dependencies..."
    - npm ci --prefer-offline --no-audit
    
    # Build Android APKs
    - echo "üî® Building Android APKs..."
    - cd android
    - chmod +x gradlew
    - ./gradlew clean
    - ./gradlew assembleDebug assembleAndroidTest -DtestBuildType=debug --parallel --build-cache
    - cd ..
    
    # Prepare APKs for testing
    - echo "üìã Preparing APKs..."
    - mkdir -p e2e-build
    - cp android/app/build/outputs/apk/debug/app-debug.apk e2e-build/
    - cp android/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk e2e-build/
    - ls -la e2e-build/
    
  artifacts:
    name: "apk-builds-$CI_COMMIT_SHORT_SHA"
    paths:
      - e2e-build/
      - node_modules/
    expire_in: 2 hours
    reports:
      junit: android/app/build/test-results/**/TEST-*.xml
      
  timeout: 20m
  retry:
    max: 1
    when: runner_system_failure

# ================================
# TEST STAGE
# ================================

üß™ Detox E2E Tests:
  stage: test
  image: reactnativecommunity/react-native-android:14.0
  services:
    - docker:24-dind
    
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    
  dependencies:
    - üì± Build APKs
    
  before_script:
    - echo "üîß Setting up Android emulator environment..."
    
    # Install additional dependencies
    - apt-get update -qq
    - apt-get install -y -qq qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils cpu-checker
    - apt-get install -y -qq libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
    
    # Install Detox CLI
    - npm install -g detox-cli@20.40.2
    - detox --version
    
    # Set up Android emulator
    - echo "üì± Setting up Android emulator..."
    - $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "emulator"
    - $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "system-images;android-31;google_apis;x86_64"
    - echo "no" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager create avd -n test_emulator -k "system-images;android-31;google_apis;x86_64"
    
    # Configure emulator for CI
    - echo "hw.gpu.enabled=yes" >> ~/.android/avd/test_emulator.avd/config.ini
    - echo "hw.gpu.mode=swiftshader_indirect" >> ~/.android/avd/test_emulator.avd/config.ini
    - echo "disk.dataPartition.size=4096MB" >> ~/.android/avd/test_emulator.avd/config.ini
    
  script:
    - echo "üöÄ Starting Detox E2E tests..."
    
    # Start emulator in background
    - echo "üì± Starting Android emulator..."
    - $ANDROID_SDK_ROOT/emulator/emulator -avd test_emulator -no-window -no-audio -no-snapshot-save -wipe-data -gpu swiftshader_indirect &
    - EMU_PID=$!
    
    # Wait for emulator to boot
    - echo "‚è≥ Waiting for emulator to boot..."
    - timeout 300 bash -c 'until $ANDROID_SDK_ROOT/platform-tools/adb shell getprop sys.boot_completed | grep -m 1 "1"; do echo "Waiting for emulator..."; sleep 5; done'
    
    # Verify emulator is ready
    - $ANDROID_SDK_ROOT/platform-tools/adb devices
    - $ANDROID_SDK_ROOT/platform-tools/adb shell getprop ro.build.version.release
    
    # Run Detox tests
    - echo "üß™ Running Detox tests..."
    - mkdir -p e2e/artifacts
    - detox test --configuration $DETOX_CONFIGURATION --record-logs all --take-screenshots failing --cleanup --headless
    
    # Cleanup
    - echo "üßπ Cleaning up..."
    - kill $EMU_PID || true
    
  after_script:
    - echo "üìä Collecting test artifacts..."
    - ls -la e2e/artifacts/ || echo "No artifacts directory"
    - mkdir -p e2e-results
    - find . -name "*.xml" -path "*/test-results/*" -exec cp {} e2e-results/ \;
    
  artifacts:
    name: "detox-test-results-$CI_COMMIT_SHORT_SHA"
    when: always
    paths:
      - e2e/artifacts/
      - e2e-results/
      - "*.log"
    reports:
      junit: e2e-results/*.xml
    expire_in: 1 week
    
  timeout: 30m
  retry:
    max: 1
    when:
      - runner_system_failure
      - stuck_or_timeout_failure

# ================================
# CONDITIONAL STAGES
# ================================

üìã Test Report:
  stage: deploy
  image: alpine:latest
  dependencies:
    - üß™ Detox E2E Tests
  before_script:
    - apk add --no-cache curl jq
  script:
    - echo "üìä Generating test summary..."
    - echo "## üß™ Detox E2E Test Results" > test-summary.md
    - echo "- **Commit:** $CI_COMMIT_SHORT_SHA" >> test-summary.md
    - echo "- **Branch:** $CI_COMMIT_REF_NAME" >> test-summary.md
    - echo "- **Pipeline:** $CI_PIPELINE_URL" >> test-summary.md
    - echo "" >> test-summary.md
    
    - if [ -d "e2e/artifacts" ]; then
        echo "- **Screenshots:** $(find e2e/artifacts -name "*.png" | wc -l)" >> test-summary.md;
        echo "- **Logs:** $(find e2e/artifacts -name "*.log" | wc -l)" >> test-summary.md;
      else
        echo "- **Artifacts:** None generated" >> test-summary.md;
      fi
    - cat test-summary.md
    
  artifacts:
    name: "test-summary-$CI_COMMIT_SHORT_SHA"
    paths:
      - test-summary.md
    expire_in: 1 month
    
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# ================================
# MANUAL JOBS
# ================================

üîß Debug Environment:
  stage: test
  image: reactnativecommunity/react-native-android:14.0
  script:
    - echo "üîç Environment Debug Information"
    - echo "================================"
    - echo "Node: $(node --version)"
    - echo "NPM: $(npm --version)"
    - echo "Java: $(java -version)"
    - echo "Android SDK: $ANDROID_SDK_ROOT"
    - echo "Available packages:"
    - $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --list | head -20
    - echo "Detox version: $(detox --version)"
    - echo "APK files:"
    - ls -la e2e-build/ || echo "No APK files found"
    
  dependencies:
    - üì± Build APKs
    
  when: manual
  allow_failure: true